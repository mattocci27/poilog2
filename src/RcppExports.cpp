// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

// do_dpln
Rcpp::NumericVector do_dpln(Rcpp::IntegerVector x, double mu, double sig);
RcppExport SEXP _ztpln_do_dpln(SEXP xSEXP, SEXP muSEXP, SEXP sigSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    Rcpp::traits::input_parameter< double >::type sig(sigSEXP);
    rcpp_result_gen = Rcpp::wrap(do_dpln(x, mu, sig));
    return rcpp_result_gen;
END_RCPP
}
// do_dpln2
Rcpp::NumericVector do_dpln2(Rcpp::IntegerVector x, double mu, double sig);
RcppExport SEXP _ztpln_do_dpln2(SEXP xSEXP, SEXP muSEXP, SEXP sigSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    Rcpp::traits::input_parameter< double >::type sig(sigSEXP);
    rcpp_result_gen = Rcpp::wrap(do_dpln2(x, mu, sig));
    return rcpp_result_gen;
END_RCPP
}
// do_dztpln
Rcpp::NumericVector do_dztpln(Rcpp::IntegerVector x, double mu, double sig);
RcppExport SEXP _ztpln_do_dztpln(SEXP xSEXP, SEXP muSEXP, SEXP sigSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    Rcpp::traits::input_parameter< double >::type sig(sigSEXP);
    rcpp_result_gen = Rcpp::wrap(do_dztpln(x, mu, sig));
    return rcpp_result_gen;
END_RCPP
}
// do_dztpln2
Rcpp::NumericVector do_dztpln2(Rcpp::IntegerVector x, double mu, double sig);
RcppExport SEXP _ztpln_do_dztpln2(SEXP xSEXP, SEXP muSEXP, SEXP sigSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    Rcpp::traits::input_parameter< double >::type sig(sigSEXP);
    rcpp_result_gen = Rcpp::wrap(do_dztpln2(x, mu, sig));
    return rcpp_result_gen;
END_RCPP
}
// do_dztplnm
Eigen::VectorXd do_dztplnm(Rcpp::IntegerVector x, Rcpp::NumericVector mu, Rcpp::NumericVector sigma, Eigen::VectorXd theta);
RcppExport SEXP _ztpln_do_dztplnm(SEXP xSEXP, SEXP muSEXP, SEXP sigmaSEXP, SEXP thetaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type mu(muSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type theta(thetaSEXP);
    rcpp_result_gen = Rcpp::wrap(do_dztplnm(x, mu, sigma, theta));
    return rcpp_result_gen;
END_RCPP
}
// do_dztplnm2
Eigen::VectorXd do_dztplnm2(Rcpp::IntegerVector x, Rcpp::NumericVector mu, Rcpp::NumericVector sigma, Eigen::VectorXd theta);
RcppExport SEXP _ztpln_do_dztplnm2(SEXP xSEXP, SEXP muSEXP, SEXP sigmaSEXP, SEXP thetaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type mu(muSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type theta(thetaSEXP);
    rcpp_result_gen = Rcpp::wrap(do_dztplnm2(x, mu, sigma, theta));
    return rcpp_result_gen;
END_RCPP
}
// do_rztpln
long do_rztpln(double mu, double sig);
RcppExport SEXP _ztpln_do_rztpln(SEXP muSEXP, SEXP sigSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    Rcpp::traits::input_parameter< double >::type sig(sigSEXP);
    rcpp_result_gen = Rcpp::wrap(do_rztpln(mu, sig));
    return rcpp_result_gen;
END_RCPP
}
// do_vec_rztpln
Rcpp::IntegerVector do_vec_rztpln(int n, double mu, double sig);
RcppExport SEXP _ztpln_do_vec_rztpln(SEXP nSEXP, SEXP muSEXP, SEXP sigSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    Rcpp::traits::input_parameter< double >::type sig(sigSEXP);
    rcpp_result_gen = Rcpp::wrap(do_vec_rztpln(n, mu, sig));
    return rcpp_result_gen;
END_RCPP
}
// do_vec2_rztpln
Rcpp::IntegerVector do_vec2_rztpln(int n, Rcpp::NumericVector mu, Rcpp::NumericVector sig);
RcppExport SEXP _ztpln_do_vec2_rztpln(SEXP nSEXP, SEXP muSEXP, SEXP sigSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type mu(muSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type sig(sigSEXP);
    rcpp_result_gen = Rcpp::wrap(do_vec2_rztpln(n, mu, sig));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_ztpln_do_dpln", (DL_FUNC) &_ztpln_do_dpln, 3},
    {"_ztpln_do_dpln2", (DL_FUNC) &_ztpln_do_dpln2, 3},
    {"_ztpln_do_dztpln", (DL_FUNC) &_ztpln_do_dztpln, 3},
    {"_ztpln_do_dztpln2", (DL_FUNC) &_ztpln_do_dztpln2, 3},
    {"_ztpln_do_dztplnm", (DL_FUNC) &_ztpln_do_dztplnm, 4},
    {"_ztpln_do_dztplnm2", (DL_FUNC) &_ztpln_do_dztplnm2, 4},
    {"_ztpln_do_rztpln", (DL_FUNC) &_ztpln_do_rztpln, 2},
    {"_ztpln_do_vec_rztpln", (DL_FUNC) &_ztpln_do_vec_rztpln, 3},
    {"_ztpln_do_vec2_rztpln", (DL_FUNC) &_ztpln_do_vec2_rztpln, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_ztpln(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
